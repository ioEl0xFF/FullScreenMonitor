<Window x:Class="FullScreenMonitor.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:FullScreenMonitor"
        xmlns:constants="clr-namespace:FullScreenMonitor.Constants;assembly=FullScreenMonitor"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        Title="FullScreenMonitor - 設定"
        Height="{x:Static constants:WindowConstants.SettingsWindowHeight}"
        Width="{x:Static constants:WindowConstants.SettingsWindowWidth}"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{DynamicResource MaterialDesignFont}">

        <!-- タイトルバーの色をカスタマイズ -->
        <WindowChrome.WindowChrome>
            <WindowChrome CaptionHeight="0"
                         ResizeBorderThickness="0"
                         GlassFrameThickness="0"
                         UseAeroCaptionButtons="False"/>
        </WindowChrome.WindowChrome>

    <Window.Resources>
        <!-- Material Design カスタムスタイル -->
        <Style x:Key="MaterialDesignCard" TargetType="materialDesign:Card">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="UniformCornerRadius" Value="8"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp4"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp8"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MaterialDesignSectionHeader" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        </Style>

        <!-- アニメーション定義 -->
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                           From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <Storyboard x:Key="ButtonHoverAnimation">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                           To="1.05" Duration="0:0:0.1"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                           To="1.05" Duration="0:0:0.1"/>
        </Storyboard>

        <Storyboard x:Key="ButtonLeaveAnimation">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                           To="1.0" Duration="0:0:0.1"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                           To="1.0" Duration="0:0:0.1"/>
        </Storyboard>

        <!-- ボタンスタイル -->
        <Style x:Key="AnimatedButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource ButtonHoverAnimation}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource ButtonLeaveAnimation}"/>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox選択時のアニメーション -->
        <Storyboard x:Key="ComboBoxSelectionAnimation">
            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                           To="#E3F2FD" Duration="0:0:0.2"/>
            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                           To="#2196F3" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="BorderThickness"
                           To="2" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="ComboBoxSelectionResetAnimation">
            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                           To="Transparent" Duration="0:0:0.3"/>
            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                           To="{DynamicResource MaterialDesignDivider}" Duration="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetProperty="BorderThickness"
                           To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <Storyboard x:Key="ButtonEmphasisAnimation">
            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                           To="#4CAF50" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                           To="1.1" Duration="0:0:0.2"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                           To="1.1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="ButtonEmphasisResetAnimation">
            <ColorAnimation Storyboard.TargetProperty="Background.Color"
                           To="{DynamicResource MaterialDesignRaisedButtonBackground}" Duration="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                           To="1.0" Duration="0:0:0.3"/>
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                           To="1.0" Duration="0:0:0.3"/>
        </Storyboard>

        <!-- プロセスリストアイテムスタイル -->
        <Style x:Key="ProcessListItemStyle" TargetType="ListBoxItem">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <materialDesign:PackIcon Kind="Application"
                                                       Grid.Column="0"
                                                       Width="16" Height="16"
                                                       VerticalAlignment="Center"
                                                       Margin="0,0,8,0"
                                                       Foreground="{DynamicResource MaterialDesignBodyLight}"/>

                                <TextBlock Grid.Column="1"
                                          Text="{TemplateBinding Content}"
                                          VerticalAlignment="Center"
                                          Foreground="{TemplateBinding Foreground}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#2196F3"/>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="BorderBrush" Value="#1976D2"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Expanderスタイル -->
        <Style x:Key="MaterialDesignExpander" TargetType="Expander" BasedOn="{StaticResource MaterialDesignExpander}">
            <Setter Property="Margin" Value="0,8"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="materialDesign:ElevationAssist.Elevation" Value="Dp2"/>
        </Style>
    </Window.Resources>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- ヘッダー -->
            <RowDefinition Height="*"/>    <!-- メインコンテンツ -->
            <RowDefinition Height="Auto"/> <!-- フッター -->
        </Grid.RowDefinitions>
        <!-- ヘッダー -->
        <materialDesign:ColorZone Mode="PrimaryMid" Padding="20,20,16,20" Margin="0,0,0,20" Grid.Row="0">
                <materialDesign:ColorZone.Effect>
                    <DropShadowEffect Color="Black" Opacity="0.2" ShadowDepth="4" BlurRadius="8"/>
                </materialDesign:ColorZone.Effect>
                <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Kind="Settings" Width="32" Height="32"
                                            VerticalAlignment="Center" Margin="0,0,12,0"/>
                    <TextBlock Text="FullScreenMonitor 設定"
                              FontSize="24" FontWeight="Medium"
                              VerticalAlignment="Center"/>
                    <Button x:Name="ThemeToggleButton"
                            Style="{StaticResource AnimatedButton}"
                            ToolTip="テーマ切り替え"
                            Click="ThemeToggleButton_Click"
                            Margin="20,0,0,0"
                            Width="36" Height="36"
                            Padding="6">
                        <materialDesign:PackIcon Kind="ThemeLightDark" Width="20" Height="20"/>
                    </Button>
                </StackPanel>
        </materialDesign:ColorZone>

        <!-- メインコンテンツ: 2カラムGrid -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- 左カラム -->
            <StackPanel Grid.Column="0" Margin="0,0,10,0">
                <!-- 監視対象プロセス -->
            <materialDesign:Card Style="{StaticResource MaterialDesignCard}">
                <StackPanel>
                    <TextBlock Text="監視対象プロセス" Style="{StaticResource MaterialDesignSectionHeader}"/>

                    <!-- プロセス名入力 -->
                    <Grid Margin="0,0,0,12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Grid Grid.Column="0" Margin="0,0,8,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ComboBox x:Name="ProcessComboBox"
                                      Grid.Column="0"
                                      Text="{Binding NewProcessName, UpdateSourceTrigger=PropertyChanged}"
                                      ItemsSource="{Binding RunningProcesses}"
                                      DisplayMemberPath="DisplayText"
                                      IsEditable="True"
                                      Margin="0,0,8,0"
                                      materialDesign:HintAssist.Hint="プロセス名を入力"
                                      materialDesign:HintAssist.IsFloating="True"
                                      Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                      SelectionChanged="ProcessComboBox_SelectionChanged"/>

                            <Button Grid.Column="1"
                                    Style="{StaticResource MaterialDesignIconButton}"
                                    ToolTip="プロセス一覧を更新"
                                    Click="RefreshProcesses_Click">
                                <materialDesign:PackIcon Kind="Refresh" Width="20" Height="20"/>
                            </Button>
                        </Grid>

                        <Button x:Name="AddProcessButton"
                                Grid.Column="2"
                                Click="AddProcess_Click"
                                Style="{StaticResource AnimatedButton}"
                                Margin="8,0,0,0">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </Button.RenderTransform>
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Plus" Width="16" Height="16"
                                                        VerticalAlignment="Center" Margin="0,0,4,0"/>
                                <TextBlock Text="追加" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </Grid>

                    <!-- プロセス一覧 -->
                    <ListBox x:Name="ProcessListBox"
                             ItemsSource="{Binding TargetProcesses}"
                             SelectionMode="Extended"
                             Height="100"
                             Margin="0,0,0,12"
                             Style="{StaticResource MaterialDesignListBox}"
                             ItemContainerStyle="{StaticResource ProcessListItemStyle}"
                             SelectionChanged="ProcessListBox_SelectionChanged"/>

                    <!-- 削除ボタン -->
                    <Button Click="RemoveProcess_Click"
                            ToolTip="Ctrl+クリックで複数選択可能"
                            Style="{StaticResource MaterialDesignOutlinedButton}"
                            Foreground="{StaticResource ErrorBrush}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Delete" Width="16" Height="16"
                                                    VerticalAlignment="Center" Margin="0,0,4,0"/>
                            <TextBlock Text="{Binding DeleteButtonText}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
                </materialDesign:Card>

                <!-- ウィンドウ復元設定 -->
                <Expander Header="ウィンドウ復元設定"
                          Style="{StaticResource MaterialDesignExpander}"
                          IsExpanded="False">
                    <StackPanel>
                        <CheckBox x:Name="RestoreOnSettingsClosedCheckBox"
                                  Content="設定画面を閉じた時に最小化されたウィンドウを復元"
                                  IsChecked="{Binding RestoreOnSettingsClosed}"
                                  Margin="0,0,0,8"
                                  Style="{StaticResource MaterialDesignCheckBox}"/>
                        <CheckBox x:Name="RestoreOnFullScreenExitCheckBox"
                                  Content="全画面解除時にウィンドウを復元する"
                                  IsChecked="{Binding RestoreOnFullScreenExit}"
                                  Margin="0,0,0,8"
                                  Style="{StaticResource MaterialDesignCheckBox}"/>
                        <CheckBox x:Name="RestoreOnAppExitCheckBox"
                                  Content="ソフト終了時に最小化されたウィンドウを復元"
                                  IsChecked="{Binding RestoreOnAppExit}"
                                  Style="{StaticResource MaterialDesignCheckBox}"/>
                    </StackPanel>
                </Expander>
            </StackPanel>

            <!-- 右カラム -->
            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                <!-- 監視間隔 -->
            <materialDesign:Card Style="{StaticResource MaterialDesignCard}">
                <StackPanel>
                    <TextBlock Text="監視間隔" Style="{StaticResource MaterialDesignSectionHeader}"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Margin="0,0,12,0">
                            <Slider x:Name="IntervalSlider"
                                    Value="{Binding MonitorInterval}"
                                    Minimum="100"
                                    Maximum="2000"
                                    TickFrequency="100"
                                    IsSnapToTickEnabled="True"
                                    Height="24"
                                    Style="{StaticResource MaterialDesignDiscreteSlider}"/>
                            <TextBlock Text="監視間隔を調整してください（100ms〜2000ms）"
                                       FontSize="11"
                                       Foreground="{DynamicResource MaterialDesignBodyLight}"
                                       Margin="0,4,0,0"/>
                        </StackPanel>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock Text="{Binding MonitorInterval, StringFormat={}{0}ms}"
                                       FontWeight="Medium"
                                       FontSize="16"
                                       Foreground="{DynamicResource MaterialDesignBody}"
                                       HorizontalAlignment="Center"/>
                            <TextBlock Text="現在の値"
                                       FontSize="10"
                                       Foreground="{DynamicResource MaterialDesignBodyLight}"
                                       HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </StackPanel>
                </materialDesign:Card>

                <!-- スタートアップ設定 -->
            <materialDesign:Card Style="{StaticResource MaterialDesignCard}">
                <StackPanel>
                    <TextBlock Text="スタートアップ設定" Style="{StaticResource MaterialDesignSectionHeader}"/>
                    <CheckBox x:Name="StartupCheckBox"
                              Content="Windows起動時に自動でアプリを開始"
                              IsChecked="{Binding StartWithWindows}"
                              Style="{StaticResource MaterialDesignCheckBox}"/>
                </StackPanel>
                </materialDesign:Card>

                <!-- 状態表示 -->
            <materialDesign:Card Style="{StaticResource MaterialDesignCard}">
                <StackPanel>
                    <TextBlock Text="アプリケーション状態" Style="{StaticResource MaterialDesignSectionHeader}"/>
                    <StackPanel>
                        <!-- 監視状態インジケーター -->
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,12">
                            <Ellipse x:Name="StatusIndicator"
                                     Width="12" Height="12"
                                     Fill="{StaticResource SuccessBrush}"
                                     VerticalAlignment="Center"
                                     Margin="0,0,8,0">
                                <Ellipse.Effect>
                                    <DropShadowEffect Color="Green" Opacity="0.6" ShadowDepth="0" BlurRadius="4"/>
                                </Ellipse.Effect>
                            </Ellipse>
                            <TextBlock x:Name="StatusTextBlock"
                                       Text="監視中..."
                                       Foreground="{StaticResource SuccessBrush}"
                                       FontWeight="Medium"
                                       FontSize="14"
                                       VerticalAlignment="Center"/>
                        </StackPanel>

                        <!-- 監視制御ボタン -->
                        <Button x:Name="ToggleMonitoringButton"
                                Click="ToggleMonitoring_Click"
                                Style="{StaticResource MaterialDesignOutlinedButton}"
                                Margin="0,12,0,0"
                                HorizontalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <materialDesign:PackIcon x:Name="ToggleMonitoringIcon"
                                                        Kind="Pause"
                                                        Width="18" Height="18"
                                                        VerticalAlignment="Center"
                                                        Margin="0,0,8,0"/>
                                <TextBlock x:Name="ToggleMonitoringText"
                                           Text="一時停止"
                                           VerticalAlignment="Center"
                                           FontWeight="Medium"/>
                            </StackPanel>
                        </Button>

                        <!-- 統計情報 -->
                        <Grid Margin="0,16,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- 最終チェック時間 -->
                            <StackPanel Grid.Column="0" Grid.Row="0" Margin="0,0,8,8">
                                <TextBlock Text="最終チェック"
                                           FontSize="10"
                                           Foreground="{DynamicResource MaterialDesignBodyLight}"
                                           Margin="0,0,0,2"/>
                                <TextBlock x:Name="LastCheckTextBlock"
                                           Text="--"
                                           FontSize="12"
                                           FontWeight="Medium"
                                           Foreground="{DynamicResource MaterialDesignBody}"/>
                            </StackPanel>

                            <!-- 対象プロセス数 -->
                            <StackPanel Grid.Column="1" Grid.Row="0" Margin="8,0,0,8">
                                <TextBlock Text="対象プロセス"
                                           FontSize="10"
                                           Foreground="{DynamicResource MaterialDesignBodyLight}"
                                           Margin="0,0,0,2"/>
                                <TextBlock x:Name="TargetProcessCountTextBlock"
                                           Text="0個"
                                           FontSize="12"
                                           FontWeight="Medium"
                                           Foreground="{DynamicResource MaterialDesignBody}"/>
                            </StackPanel>

                            <!-- 最小化ウィンドウ数 -->
                            <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1">
                                <TextBlock Text="最小化ウィンドウ"
                                           FontSize="10"
                                           Foreground="{DynamicResource MaterialDesignBodyLight}"
                                           Margin="0,0,0,2"/>
                                <TextBlock x:Name="MinimizedWindowCountTextBlock"
                                           Text="0個"
                                           FontSize="12"
                                           FontWeight="Medium"
                                           Foreground="{DynamicResource MaterialDesignBody}"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </StackPanel>
                </materialDesign:Card>
            </StackPanel>
        </Grid>

        <!-- フッター -->
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0,20,0,20"
                    Grid.Row="2">
                <Button Click="Close_Click"
                        Style="{StaticResource AnimatedButton}">
                    <StackPanel Orientation="Horizontal">
                        <materialDesign:PackIcon Kind="Close" Width="16" Height="16"
                                                VerticalAlignment="Center" Margin="0,0,4,0"/>
                        <TextBlock Text="閉じる" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
        </StackPanel>
    </Grid>
</Window>

